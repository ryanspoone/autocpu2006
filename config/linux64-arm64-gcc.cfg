################################################################################
# SPEC CPU2006 config file for ARM 64-bit using Linux GCC
################################################################################
action = validate
output_format = pdf,text,html,config
ext = arm-lnx64-gcc
allow_extension_override = yes
PATHSEP = /
reportable = 1
rate = 1
tune = base
flagsurl1 = $[top]/config/flags/linux-arm64-gcc.xml


hw_avail        = 2014
hw_cpu_name     = ARM
hw_cpu_mhz      = 2400
hw_disk         = SATA Disk
hw_fpu          = None
hw_memory       = 9999
hw_model        = ARM
hw_nchips       = 1
hw_ncores       = 48
hw_ncoresperchip= 48
hw_nthreadspercore= 1
hw_other        = None
hw_pcache       = 78KB Instruction + 32KB Data per core
hw_scache       = 16MB on chip
hw_tcache       = N/A
hw_ocache       = N/A
hw_vendor       = ARM
license_num     = 13
sw_avail        = 2015
sw_base_ptrsize = 32/64-bit
sw_file         = Linux/ext3
sw_os           = Ubuntu
sw_stat         = Multi-user
sw_other        = None
sw_peak_ptrsize = 64-bit
tester          = Intel Corporation
test_sponsor    = Intel Corporation
sw_compiler1 = C: Version <n.n.n> of gcc
sw_compiler2 = C++: Version <n.n.n> of g++
sw_compiler3 = Fortran: Version <n.n.n> of gfortran


notes_plat_000 = 
notes_plat_005 = Cleared file system page cached using:
notes_plat_010 = "echo '1' > /proc/sys/vm/drop_caches"
notes_plat_015 = 
notes_plat_020 = Disabled transparent huge pages using the following command if available: 
notes_plat_025 = "echo 'never' > /sys/kernel/mm/transparent_hugepage/enabled"
notes_plat_030 = 


default:
CC = gcc -std=gnu89
CXX = g++ -std=c++98
FC = gfortran -std=legacy
F77 = gfortran -std=legacy
OBJ = .o
makeflags = -j6
PORTABILITY = -DSPEC_CPU_LP64
%ifndef %{no-numa}
    notes_submit_000 =
    notes_submit_005 = Using 'numactl --localalloc -physcpubind=' command to set the specific CPU IDs
    notes_submit_010 = to be binded.  (For details, please see the config file.)
    notes_submit_015 =

    submit = numactl --localalloc --physcpubind=$SPECCOPYNUM $command
%elif defined(%{no-numa})
    notes_submit_000 =
    notes_submit_005 = Using 'taskset -c' command to set the specific CPU IDs to be used.
    notes_submit_010 =   (For details, please see the config file.)
    notes_submit_015 =

    submit = taskset -c $SPECCOPYNUM "$command"
%elif defined(%{no-taskset})
    notes_submit_000 =
    notes_submit_005 = Not using any command to set the specific CPU IDs to be used.
    notes_submit_010 =   (For details, please see the config file.)
    notes_submit_015 =

    submit = "$command"
%endif




################################################################################
# Portability
################################################################################

400.perlbench:
CPORTABILITY = -DSPEC_CPU_LINUX
EXTRA_CFLAGS = -fno-strict-aliasing

403.gcc:
CPORTABILITY = -DSPEC_CPU_LINUX
EXTRA_CFLAGS = -Dalloca=_alloca

416.gamess:
FPORTABILITY = -DSPEC_CPU_LINUX
EXTRA_FFLAGS = -ffixed-form

429.mcf:
CPORTABILITY = -DWANT_STDC_PROTO

435.gromacs:
FPORTABILITY = -DSPEC_CPU_APPEND_UNDERSCORE

436.cactusADM:
FPORTABILITY = -DSPEC_CPU_LINUX
EXTRA_FFLAGS = -fno-second-underscore

447.dealII:
CXXPORTABILITY = -include cstdlib -include cstring

454.calculix:
PORTABILITY = -DSPEC_CPU_NOZMODIFIER

450.soplex:
EXTRA_CXXFLAGS = -fno-strict-aliasing

456.hmmer:
EXTRA_CFLAGS = -funsigned-char
EXTRA_LDFLAGS = -lm

462.libquantum:
CPORTABILITY = -DSPEC_CPU_LINUX

464.h264ref:
EXTRA_CFLAGS = -fsigned-char
EXTRA_LIBS = -lm

481.wrf:
FPORTABILITY = -DSPEC_CPU_LINUX -DSPEC_CPU_CASE_FLAG -DSPEC_CPU_LOGICAL_STRICT
CPORTABILITY = -DSPEC_CPU_LINUX -DSPEC_CPU_CASE_FLAG -DSPEC_CPU_LOGICAL_STRICT
EXTRA_FFLAGS = -frecord-marker=4

482.sphinx3:
EXTRA_CFLAGS = -fsigned-char

483.xalancbmk:
CXXPORTABILITY = -DSPEC_CPU_LINUX -include cstdlib -include cstring

################################################################################
# Optimization Flags
################################################################################

default:
FAST = -Ofast -fno-aggressive-loop-optimizations
LTO = -flto

################################################################################
# Peak Optimization Flags
################################################################################

int=peak:
OPTIMIZE = $(FAST)
PASS1_CFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_CFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_FFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_FFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_CXXFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_CXXFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDCFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDCFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDCXXFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDCXXFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDFFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDFFLAGS = $(OPTIMIZE) -fprofile-use

fp=peak:
OPTIMIZE = $(FAST) $(LTO) -mabi=lp64
PASS1_CFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_CFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_FFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_FFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_CXXFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_CXXFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDCFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDCFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDCXXFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDCXXFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDFFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDFFLAGS = $(OPTIMIZE) -fprofile-use

################################################################################
# Base Optimization Flags
################################################################################

int=base:
OPTIMIZE = $(FAST)

fp=base:
OPTIMIZE = $(FAST) $(LTO) -mabi=lp64

################################################################################
# SPEC CPU options for GCC on ARMv8
###########################################################

################################################################################
# ARMv8 Cortex A53
################################################################################
default=default=default=cortex-a53:
COPTIMIZE = -march=armv8-a -mtune=cortex-a53
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################################
# ARMv8 Cortex A57
################################################################################
default=default=default=cortex-a57:
COPTIMIZE = -march=armv8-a -mtune=cortex-a57
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################################
# ARMv8 Cortex A72
################################################################################
default=default=default=cortex-a72:
COPTIMIZE = -march=armv8-a -mtune=cortex-a72
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################################
# ARMv8 XGene1
################################################################################
default=default=default=xgene1:
COPTIMIZE = -march=armv8-a -mtune=xgene1
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)
hw_avail        = 2014
hw_cpu_name     = X-Gene
hw_cpu_mhz      = 2400
hw_disk         = SATA Disk
hw_fpu          = None
hw_memory       = 9999
hw_model        = Applied Micro X-Gene
hw_nchips       = 1
hw_ncores       = 48
hw_ncoresperchip= 48
hw_nthreadspercore= 1
hw_other        = None
hw_pcache       = 78KB Instruction + 32KB Data per core
hw_scache       = 16MB on chip
hw_tcache       = N/A
hw_ocache       = N/A
hw_vendor       = Applied Micro
license_num     = 9999
sw_avail        = 2015
sw_base_ptrsize = 32/64-bit
sw_file         = Linux/ext3
sw_os           = Ubuntu
sw_stat         = Multi-user
sw_other        = None
sw_peak_ptrsize = 32/64-bit
tester          = Intel
test_sponsor    = Intel

################################################################################
# Cavium ARMv8 ThunderX
################################################################################
default=default=default=thunderx:
COPTIMIZE = -march=armv8-a+fp+simd+crypto+crc+nolse -mtune=thunderx
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)
PORTABILITY = -DSPEC_CPU_LP64 -DSPEC_CPU_LINUX -DSPEC_CPU_CASE_FLAG
makeflags = -j48
hw_avail        = 2014
hw_cpu_name     = ThunderX
hw_cpu_mhz      = 2000
hw_disk         = SATA Disk
hw_fpu          = None
hw_memory       = 9999
hw_model        = Cavium ThunderX
hw_nchips       = 1
hw_ncores       = 48
hw_ncoresperchip= 48
hw_nthreadspercore= 1
hw_other        = None
hw_pcache       = 78KB Instruction + 32KB Data per core
hw_scache       = 16MB on chip
hw_tcache       = N/A
hw_ocache       = N/A
hw_vendor       = Cavium
license_num     = 9999
sw_avail        = 2015
sw_base_ptrsize = 32/64-bit
sw_file         = Linux/ext3
sw_os           = Ubuntu
sw_stat         = Multi-user
sw_other        = None
sw_peak_ptrsize = 32/64-bit
tester          = Intel
test_sponsor    = Intel

################################################################################
# ARMv8 custom/generic chip
################################################################################
default=default=default=generic:
COPTIMIZE = -march=armv8-a -mtune=generic-armv8-a
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)
