################################################################
# SPEC CPU2006 config file for ARM 32-bit using Linux GCC
################################################################
action = validate
output_format = pdf,text,html,config
ext = arm-lnx32-gcc
allow_extension_override = yes
PATHSEP = /
check_md5 = 1
reportable = 1
rate = 1
ignore_sigint = 1
tune = base
flagsurl1 = $[top]/config/flags/linux-arm32-gcc.xml


hw_avail        = 2014
hw_cpu_name     = ARM
hw_cpu_mhz      = 2400
hw_disk         = SATA Disk
hw_fpu          = None
hw_memory       = 9999
hw_model        = ARM
hw_nchips       = 1
hw_ncores       = 48
hw_ncoresperchip= 48
hw_nthreadspercore= 1
hw_other        = None
hw_pcache       = 78KB Instruction + 32KB Data per core
hw_scache       = 16MB on chip
hw_tcache       = N/A
hw_ocache       = N/A
hw_vendor       = ARM
license_num     = 13
sw_avail        = 2015
sw_base_ptrsize = 32/64-bit
sw_file         = Linux/ext3
sw_os           = Ubuntu
sw_stat         = Multi-user
sw_other        = None
sw_peak_ptrsize = 32-bit
tester          = Unknown
test_sponsor    = Unknown
sw_compiler1 = C: Version <n.n.n> of gcc
sw_compiler2 = C++: Version <n.n.n> of g++
sw_compiler3 = Fortran: Version <n.n.n> of gfortran


notes_plat_000 = 
notes_plat_005 = Cleared file system page cached using:
notes_plat_010 = "echo '1' > /proc/sys/vm/drop_caches"
notes_plat_015 = 
notes_plat_020 = Disabled transparent huge pages using the following command if available: 
notes_plat_025 = "echo 'never' > /sys/kernel/mm/transparent_hugepage/enabled"
notes_plat_030 = 


default:
CC = gcc
CXX = g++
FC = gfortran
F77 = gfortran
OBJ = .o
makeflags = -j6
PORTABILITY = -std=gnu90
%ifndef %{no-numa}
    notes_submit_000 =
    notes_submit_005 = Using 'numactl --localalloc -physcpubind=' command to set the specific CPU IDs
    notes_submit_010 = to be binded.  (For details, please see the config file.)
    notes_submit_015 =

    submit = numactl --localalloc --physcpubind=$SPECCOPYNUM $command
%elif defined(%{no-numa})
    notes_submit_000 =
    notes_submit_005 = Using 'taskset -c' command to set the specific CPU IDs to be used.
    notes_submit_010 =   (For details, please see the config file.)
    notes_submit_015 =

    submit = taskset -c $SPECCOPYNUM "$command"
%elif defined(%{no-taskset})
    notes_submit_000 =
    notes_submit_005 = Not using any command to set the specific CPU IDs to be used.
    notes_submit_010 =   (For details, please see the config file.)
    notes_submit_015 =

    submit = "$command"
%endif

#####################################################################
# Portability
#####################################################################

400.perlbench:
CPORTABILITY = -DSPEC_CPU_LINUX
EXTRA_CFLAGS = -fno-strict-aliasing

450.soplex:
EXTRA_CXXFLAGS = -fno-strict-aliasing

436.cactusADM:
FPORTABILITY = -fno-second-underscore

416.gamess:
EXTRA_FFLAGS = -ffixed-form
FPPPORTABILITY = -DSPEC_CPU_LINUX

450.soplex:
EXTRA_CXXFLAGS =  -fno-strict-aliasing -std=c++98

456.hmmer:
EXTRA_CFLAGS = -funsigned-char
EXTRA_LDFLAGS = -lm

462.libquantum:
CPORTABILITY =  -DSPEC_CPU_LINUX

464.h264ref:
EXTRA_CFLAGS = -fsigned-char
EXTRA_LIBS = -lm

481.wrf:
FPORTABILITY = -DSPEC_CPU_LINUX -DSPEC_CPU_CASE_FLAG -DSPEC_CPU_LOGICAL_STRICT
CPORTABILITY = -DSPEC_CPU_LINUX -DSPEC_CPU_CASE_FLAG -DSPEC_CPU_LOGICAL_STRICT
EXTRA_FFLAGS = -frecord-marker=4
#wrf_data_header_size = 8

483.xalancbmk:
CXXPORTABILITY = -DSPEC_CPU_LINUX

################################################################
# Optimization Flags
################################################################

default:
FAST = -Ofast -fno-aggressive-loop-optimizations
LTO = -flto

################################################################################
# Peak Optimization Flags
################################################################################

int=peak:
OPTIMIZE = $(FAST) $(LTO)
PASS1_CFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_CFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_FFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_FFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_CXXFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_CXXFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDCFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDCFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDCXXFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDCXXFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDFFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDFFLAGS = $(OPTIMIZE) -fprofile-use

fp=peak:
OPTIMIZE = $(FAST) $(LTO) -mabi=lp32
PASS1_CFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_CFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_FFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_FFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_CXXFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_CXXFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDCFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDCFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDCXXFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDCXXFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDFFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDFFLAGS = $(OPTIMIZE) -fprofile-use

################################################################################
# Base Optimization Flags
################################################################################

int=base:
OPTIMIZE = $(FAST)

fp=base:
OPTIMIZE = $(FAST) -mabi=lp32

################################################################
# SPEC CPU options for GCC on ARM
################################################################

################################################################
# A9 NEON
################################################################
default=default=default=cortex-a9:
COPTIMIZE = -march=armv7-a -mtune=cortex-a9 -mfpu=neon

################################################################
# A15 NEON
################################################################
default=default=default=cortex-a15:
COPTIMIZE = -march=armv7-a -mtune=cortex-a15 -mfpu=neon

################################################################
# MARVELL
################################################################
default=default=default=marvell-pj4:
COPTIMIZE = -march=armv7-a -mtune=marvell-pj4 -mfpu=neon

################################################################
# GENERIC
################################################################
default=default=default=armv7-a:
COPTIMIZE = -march=armv7-a -mtune=generic-armv7-a -mfpu=neon
