################################################################
# SPEC CPU2006 config file for Intel 64-bit using Linux GCC
################################################################
action = validate
output_format = pdf,text,html,config
ext = intel-lnx64-gcc
allow_extension_override = yes
PATHSEP = /
check_md5 = 1
reportable = 1
rate = 1
tune = base
flagsurl1 = $[top]/config/flags/linux-intel64-gcc.xml


hw_avail        = 2014
hw_cpu_name     = Intel
hw_cpu_mhz      = 2400
hw_disk         = SATA Disk
hw_fpu          = None
hw_memory       = 9999
hw_model        = Intel
hw_nchips       = 1
hw_ncores       = 48
hw_ncoresperchip= 48
hw_nthreadspercore= 1
hw_other        = None
hw_pcache       = 78KB Instruction + 32KB Data per core
hw_scache       = 16MB on chip
hw_tcache       = N/A
hw_ocache       = N/A
hw_vendor       = Intel
license_num     = 13
sw_avail        = 2015
sw_base_ptrsize = 32/64-bit
sw_file         = Linux/ext3
sw_os           = Ubuntu
sw_stat         = Multi-user
sw_other        = None
sw_peak_ptrsize = 64-bit
tester          = Unknown
test_sponsor    = Unknown
sw_compiler1 = C: Version <n.n.n> of gcc
sw_compiler2 = C++: Version <n.n.n> of g++
sw_compiler3 = Fortran: Version <n.n.n> of gfortran


notes_plat_000 = 
notes_plat_005 = Cleared file system page cached using:
notes_plat_010 = "echo '1' > /proc/sys/vm/drop_caches"
notes_plat_015 = 
notes_plat_020 = Disabled transparent huge pages using the following command if available: 
notes_plat_025 = "echo 'never' > /sys/kernel/mm/transparent_hugepage/enabled"
notes_plat_030 = 


default:
CC = gcc -std=gnu89 -m64
CXX = g++ -std=c++98 -m64
FC = gfortran -std=legacy -m64
F77 = gfortran -std=legacy -m64
OBJ = .o
makeflags = -j6
%ifndef %{no-numa}
    notes_submit_000 =
    notes_submit_005 = Using 'numactl --localalloc -physcpubind=' command to set the specific CPU IDs
    notes_submit_010 = to be binded.  (For details, please see the config file.)
    notes_submit_015 =

    submit = numactl --localalloc --physcpubind=$SPECCOPYNUM $command
%elif defined(%{no-numa})
    notes_submit_000 =
    notes_submit_005 = Using 'taskset -c' command to set the specific CPU IDs to be used.
    notes_submit_010 =   (For details, please see the config file.)
    notes_submit_015 =

    submit = taskset -c $SPECCOPYNUM "$command"
%elif defined(%{no-taskset})
    notes_submit_000 =
    notes_submit_005 = Not using any command to set the specific CPU IDs to be used.
    notes_submit_010 =   (For details, please see the config file.)
    notes_submit_015 =

    submit = "$command"
%endif


#####################################################################
# Optimization
#####################################################################

# Peak is high opt
default=peak:
OPTIMIZE = -Ofast -funroll-loops -fno-strict-aliasing
PASS1_CFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_CFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_FFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_FFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_CXXFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_CXXFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDCFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDCFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDCXXFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDCXXFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDFFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDFFLAGS = $(OPTIMIZE) -fprofile-use

## Base is low opt
default=base:
OPTIMIZE = -Ofast -funroll-loops -fno-strict-aliasing
PASS1_CFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_CFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_FFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_FFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_CXXFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_CXXFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDCFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDCFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDCXXFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDCXXFLAGS = $(OPTIMIZE) -fprofile-use
PASS1_LDFFLAGS = $(OPTIMIZE) -fprofile-generate
PASS2_LDFFLAGS = $(OPTIMIZE) -fprofile-use

#####################################################################
# Portability
#####################################################################

default:
PORTABILITY = -DSPEC_CPU_LINUX -DSPEC_CPU_LINUX_X64 -DSPEC_CPU_LP64

416.gamess:
EXTRA_FFLAGS = -ffixed-form -fno-aggressive-loop-optimizations -fno-tree-dominator-opts

436.cactusADM:
EXTRA_FFLAGS = -fno-second-underscore

445.gobmk:
EXTRA_CFLAGS =

447.dealII:
EXTRA_CXXFLAGS = -include cstdlib -include cstring

450.soplex:
EXTRA_CXXFLAGS =  -fno-strict-aliasing

456.hmmer:
EXTRA_CFLAGS = -funsigned-char
EXTRA_LDFLAGS = -lm

464.h264ref:
EXTRA_LIBS = -lm

481.wrf:
FPORTABILITY = -DSPEC_CPU_CASE_FLAG -DSPEC_CPU_LOGICAL_STRICT
CPORTABILITY = -DSPEC_CPU_CASE_FLAG -DSPEC_CPU_LOGICAL_STRICT
EXTRA_FFLAGS = -fno-aggressive-loop-optimizations -frecord-marker=4
EXTRA_CFLAGS = -fno-aggressive-loop-optimizations
#wrf_data_header_size = 8

483.xalancbmk:
CXXPORTABILITY = -include cstdlib -include cstring

################################################################
# SPEC CPU options for GCC on Intel 64-bit
################################################################

################################################################
# Native system CPU
################################################################
default=default=default=native:
COPTIMIZE = -march=native
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Atom CPU with 64-bit extensions, MOVBE, MMX, SSE, SSE2,
# SSE3 and SSSE3 instruction set support.
################################################################
default=default=default=atom:
COPTIMIZE = -march=atom
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Core 2 CPU with 64-bit extensions, MMX, SSE, SSE2, SSE3
# and SSSE3 instruction set support.
################################################################
default=default=default=core2:
COPTIMIZE = -march=core2
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Core i7 CPU with 64-bit extensions, MMX, SSE, SSE2,
# SSE3, SSSE3, SSE4.1 and SSE4.2 instruction set support.
################################################################
default=default=default=corei7:
COPTIMIZE = -march=corei7
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Core i7 CPU with 64-bit extensions, MMX, SSE, SSE2,
# SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AES and PCLMUL instruction
# set support.
################################################################
default=default=default=corei7-avx:
COPTIMIZE = -march=corei7-avx
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Core CPU with 64-bit extensions, MMX, SSE, SSE2,'
# SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AES, PCLMUL, FSGSBASE, RDRND
# and F16C instruction set support.
################################################################
default=default=default=core-avx-i:
COPTIMIZE = -march=core-avx-i
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Core CPU with 64-bit extensions, MOVBE, MMX, SSE, SSE3,
# SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AES, PCLMUL, FSGSBASE,
# RDRND, FMA, BMI, BMI2 and F16C instruction set support.
################################################################
default=default=default=core-avx2:
COPTIMIZE = -march=core-avx2
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Nehalem CPU with 64-bit extensions, MMX, SSE, SSE2,
# SSE3, SSSE3, SSE4.1, SSE4.2 and POPCNT instruction set
# support.
################################################################
default=default=default=nehalem:
COPTIMIZE = -march=nehalem
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Westmere CPU with 64-bit extensions, MMX, SSE, SSE2,
# SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, AES and PCLMUL
# instruction set support.
################################################################
default=default=default=westmere:
COPTIMIZE = -march=westmere
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Sandy Bridge CPU with 64-bit extensions, MMX, SSE,
# SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, AVX, AES and PCLMUL
# instruction set support.
################################################################
default=default=default=sandybridge:
COPTIMIZE = -march=sandybridge
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Ivy Bridge CPU with 64-bit extensions, MMX, SSE, SSE2,
# SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, AVX, AES, PCLMUL,
# FSGSBASE, RDRND and F16C instruction set support.
################################################################
default=default=default=ivybridge:
COPTIMIZE = -march=ivybridge
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Haswell CPU with 64-bit extensions, MOVBE, MMX, SSE,
# SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, AVX, AVX2, AES,
# PCLMUL, FSGSBASE, RDRND, FMA, BMI, BMI2 and F16C instruction
# set support.
################################################################
default=default=default=haswell:
COPTIMIZE = -march=haswell
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Broadwell CPU with 64-bit extensions, MOVBE, MMX,
# SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, AVX, AVX2,
# AES, PCLMUL, FSGSBASE, RDRND, FMA, BMI, BMI2, F16C, RDSEED,
# ADCX and PREFETCHW instruction set support.
################################################################
default=default=default=broadwell:
COPTIMIZE = -march=broadwell
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Bonnell CPU with 64-bit extensions, MOVBE, MMX, SSE,
# SSE2, SSE3 and SSSE3 instruction set support.
################################################################
default=default=default=bonnell:
COPTIMIZE = -march=bonnell
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Silvermont CPU with 64-bit extensions, MOVBE, MMX, SSE,
# SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, AES, PCLMUL and
# RDRND instruction set support.
################################################################
default=default=default=silvermont:
COPTIMIZE = -march=silvermont
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Knight's Landing CPU with 64-bit extensions, MOVBE, MMX,
# SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, AVX, AVX2, AES,
# PCLMUL, FSGSBASE, RDRND, FMA, BMI, BMI2, F16C, RDSEED, ADCX,
# PREFETCHW, AVX512F, AVX512PF, AVX512ER and AVX512CD
# instruction set support.
################################################################
default=default=default=knl:
COPTIMIZE = -march=knl
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Skylake CPU with 64-bit extensions, MOVBE, MMX, SSE,
# SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, AVX, AVX2, AES,
# PCLMUL, FSGSBASE, RDRND, FMA, BMI, BMI2, F16C, RDSEED, ADCX,
# PREFETCHW, CLFLUSHOPT, XSAVEC and XSAVES instruction set
# support.
################################################################
default=default=default=skylake:
COPTIMIZE = -march=skylake
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)

################################################################
# Intel Skylake Server CPU with 64-bit extensions, MOVBE, MMX,
# SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, PKU, AVX, AVX2,
# AES, PCLMUL, FSGSBASE, RDRND, FMA, BMI, BMI2, F16C, RDSEED,
# ADCX, PREFETCHW, CLFLUSHOPT, XSAVEC, XSAVES, AVX512F,
# AVX512VL, AVX512BW, AVX512DQ and AVX512CD instruction set
# support.
################################################################
default=default=default=skylake-avx512:
COPTIMIZE = -march=skylake-avx512
CXXOPTIMIZE = $(COPTIMIZE)
FOPTIMIZE = $(COPTIMIZE)
F77OPTIMIZE = $(COPTIMIZE)
